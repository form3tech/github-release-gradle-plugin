/*
 *    Copyright 2017 - 2018 BreadMoirai (Ton Ly)
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.10.1'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
    id 'maven-publish'
}

group = 'com.github.breadmoirai'
version = '2.2.12'

repositories {
    jcenter()
    mavenCentral()
    maven { url = 'https://plugins.gradle.org/m2/' }
}

dependencies {
    compileOnly project(':ast')

    implementation 'org.codehaus.groovy:groovy-all:2.5.6'
    compile 'com.squareup.okhttp3:okhttp:3.8.1'
    compile group: 'org.apache.tika', name: 'tika-core', version: '1.20'
    compile 'org.zeroturnaround:zt-exec:1.10'

    compileOnly 'com.gradle.publish:plugin-publish-plugin:0.9.7'

//    testCompile('org.spockframework:spock-core:1.1-groovy-2.4') {
//        exclude(group: 'org.codehaus.groovy')
//    }
//    testCompile(group: "org.testfx", name: "testfx-core", version: "4.0.13-alpha")
//    testCompile(group: "org.testfx", name: "testfx-spock", version: "4.0.13-alpha")
//    testCompile(gradleTestKit())
}

gradlePlugin {
    plugins.create('github-release') {
        id = 'com.github.breadmoirai.github-release'
        implementationClass = 'com.github.breadmoirai.githubreleaseplugin.GithubReleasePlugin'
    }
}

pluginBundle {
    website = 'https://github.com/BreadMoirai/github-release-gradle-plugin'
    vcsUrl = 'https://github.com/BreadMoirai/github-release-gradle-plugin'
    description = 'A Gradle Plugin to send Releases to Github '
    tags = ['github', 'release']

    plugins.getByName('github-release') {
        id = 'com.github.breadmoirai.github-release'
        displayName = 'Github Release Plugin'
    }
}

task createPluginClasspath {
    def outputDir = file("${buildDir}/resources/test")

    inputs.files sourceSets.test.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("${outputDir}/plugin-classpath.txt").text = sourceSets.test.runtimeClasspath.join('\n',)
    }
}
test.dependsOn(createPluginClasspath)